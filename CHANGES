Release 0.9 by SRJ9 (spanish, pending of translate)
===================
* algunos elementos OneToOne relacionados con OTHER tienen a su vez otras relaciones many_to_many que se pierden al hacer el merge. Los agrupo para luego modificarlos. (api.py:94-115, 128-144)
* si el elemento OTHER hereda de otro modelo, daba un error al eliminar el elemento padre porque no lo retornaba con el ID. Ahora, tras unas comprobaciones elimino directamente el padre. (api.py: 147-161)
* agrego la posibilidad en el mass_update de agregar o eliminar items en un campo ManyToMany y no solo de reemplazarlo. (mass_update.py: 58-75 (functions), 137-140)
* si hemos seleccionado MOVER en el merge como opcion para qué hacer con las dependencias, agregamos tambien los manytomany a la operación del merge. Anteriormente no hacia nada con los m2m por lo que se perdían en el merge (merge.py: 135-144)
* importo SETTINGS para poder personalizar qué campos mostrar/ocultar en mass_update y/o merge mediante filtros. Esta variable en SETTINGS se llamará ADMINACTIONS_FILTERS. (mass_update.py: 42 (import settings), 363-376, 379-380 (renombrar variables); merge.py: 23 (import settings), 100-106, 112 (renombro variable); mass_update.html: 46, 69)
* posibilidad de agregar también filtros no compartidos para los campos de mass_update y merge. En mass_update:384 el SETTINGS se llamará ADMINACTIONS_MASS_FILTERS, mientras que en merge:103 será ADMINACTIONS_MERGE_FILTERS.
* si un modelo hereda de otro que tenga unas acciones concretas en el mass_update tambien estaran disponibles para este, aunque no este especificado directamente, mediante inspect. El metodo get recibe ahora el parametro field_classes en lugar de field_class ya que pueden venir varias. (mass_update.py: 44 (import inspect), 106-115 (def get), 123-128)
* agrego gettext a graph.py para poder traducir la descripcion (graph.py: 24, 152)
* En la vista previa del merge, si lo cancelabas se perdía ya el registro OTHER. Este error ocurre en mysql, no así en sqlite. He comentado esta linea en 'preview' y en 'apply', ya que el paso debe hacerlo en la llamada a api.merge (merge.py: 126, 141)
* modifico algunas traducciones en español y creo su archivo compilado .mo
* agrego help_text al merge para explicar que se hara con las dependencias segun la opcion seleccionada (merge.py: 34-36, merge.html: 31)
* este arreglo es mas bien para uso individual pero lo dejo implementado: si el save contiene un argumento prevent_add_relation=True, en mi caso para que evite cierta programacion. (api.py: 7 (import inspect), 146-151)
* si una relacion m2m requiere de una tabla through (contiene informacion extra aparte de la relacion) me la salto en el proceso que hago con related (api.py: 173-178)
* En merge:many_to_many solo obtenia los many_to_many del propio modelo o del modelo heredado, pero no los creados en otros modelos relacionados con este. Ahora los sumo para tenerlos todos, descartando los que tuvieran un m2m circular (m2m entre dos instancias del mismo modelo). Tambien corrijo para evitar la excepcion cuando ocurre este caso, ya que los atributos a usar varian (api.py: 56-64, 75-80, 97-102)

Release 0.8.5
=============
* repackage due broken version in 0.8.4


Release 0.8.4
=============
* fixes :ghissue:`70` get_models return incorrect models in django 1.7+
* closes :ghissue:`71`


Release 0.8.3
=============
* bugfix: support both post_syncdb and post_migrate


Release 0.8.2
=============
* fixes #64: Export not working when actions enabled on top & bottom
* document #62: default of csv is not csv (thanks @oppianmatt)


Release 0.8.1
=============
* Use collections.OrderedDict instead for Django1.7 or higher. (thanks @rvoicilas)


Release 0.8
===========
* python 3.3, 3.4 compatibility
* add spanish translation (thanks @xangmuve)


Release 0.7
===========
* fixes issue in mass_update due wrong indentaion
* fixed :ghissue:`49`
* removed options to enable/disable transactions during mass_update.
* fixed :ghissue:`60`


Release 0.6
===========
* fixed :ghissue:`55`
* fixed :ghissue:`51`
* added selenium tests
* pulled out tests from main package and use of py.test
* removed demoproject (use `make demo` instead)


Release 0.5
===========
* fix mass_update bug that caused all records in a table to be updated (thanks @jht001)
* Added timezone support to csv and xls export


Release 0.4
===========
* fixed :ghissue:`33`
* fixed :ghissue:`20`


Release 0.3
===========
* fixed :ghissue:`26`
* add feature to :ref:`use callable as columns <export_with_callable>`
* add feature to :ref:`export dictionaries <export_with_dictionaries>`
* new action :ref:`export_as_xls`
* added custom headers to :ref:`export_as_csv`
* new permission :ref:`adminactions_massupdate`
* new permission :ref:`adminactions_merge`


Release 0.2
===========
* improved :ref:`export_as_csv`
* Django 1.6 compatibility
* Added `modeladmin` in providing_args of signals: :ref:`adminaction_requested`, :ref:`adminaction_start`,  :ref:`adminaction_end`


Release 0.1
===========
* new api module
* pull out core export_csv functionalites as `_export_as_csv() <api.html#adminactions.export._export_as_csv>`_ to be used by custom code
* New exported filename callback for easy customize the filename ( see :ref:`filename_callbacks`)
* New registration shortcut `add_to_site() <api.html#adminactions.actions.add_to_site>`_
* New action: :ref:`merge`
* Fixed :ghissue:`9`
* Added :ref:`permissions`
* New signals: :ref:`adminaction_requested`, :ref:`adminaction_start`,  :ref:`adminaction_end`


Release 0.0.4
=============
* NEW added ``add_foreign_keys`` parameter to :ref:`export_as_fixture` and :ref:`export_delete_tree`
* NEW :ref:`export_delete_tree`
* renamed export_as_json as export_as_fixtures
    - added foreign_keys dumps
    - multiple serializer
* NEW: :ref:`transform_operations`
* NEW: url to preview date format in `export_as_csv`


Release 0.0.3
=============
* added demo project


Release 0.0.2
=============
* name changed from django-actions to django-adminactions


Release 0.0.1
=============
* first relase
